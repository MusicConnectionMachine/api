swagger: "2.0"
info:
  version: "0.0.1"
  title: MusicConnectsMachine API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  
  # Group 1
  /entities:
    x-swagger-router-controller: entities
    get:
      description: Retruns list of all entities
      operationId: getAllEntities
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Entity'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add new entities to DB
      operationId: addEntities
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: body
          in: body
          description: entity data
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateEntity'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Entity'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  
  /entities/{id}:
    get:  
      description: Retruns entity with specified ID
      operationId: getEntityByID
      parameters:
        - name: id
          in: path
          description: ID of entity
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update entity
      operationId: updateEntity
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: id
          in: path
          description: ID of entity
          required: true
          type: integer
        - name: body
          in: body
          description: entity data
          required: true
          schema:
            $ref: '#/definitions/UpdateEntity'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Entity'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete entity
      operationId: deleteEntity
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: id
          in: path
          description: ID of entity
          required: true
          type: integer
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
      

  # Group 2
  /website:
    x-swagger-router-controller: website
    get:
      description: Returns metadata for all matching websites
      operationId: getMatchingSites
      parameters:
        - name: terms
          in: query
          description: array of entities
          required: false
          type: array
          items:
            type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add new websites to DB
      operationId: addWebsites
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: body
          in: body
          description: website metadata and content
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateWebsite'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /website/{id}:
    x-swagger-router-controller: website
    get:
      description: Returns metadata for website with specified ID
      operationId: getWebsiteByID
      parameters:
        - name: id
          in: path
          description: ID of website
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update website
      operationId: updateWebsite
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: id
          in: path
          description: ID of website
          required: true
          type: integer
        - name: body
          in: body
          description: website metadata and content
          required: true
          schema:
            $ref: '#/definitions/UpdateWebsite'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete website
      operationId: deleteWebsite
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: id
          in: path
          description: ID of website
          required: true
          type: integer
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"    

  /download/{filename}:
    x-swagger-router-controller: website
    get:
      description: Returns content (HTML tags stripped) of website with specified filename
      operationId: downloadContent
      parameters:
        - name: filename
          in: path
          description: filename of website
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/WebsiteContent'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
          
    
# complex objects have schema definitions
definitions:

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  
  # Group 1
  Entity:
    properties:
      # TODO!!!
      id: 
        type: integer
        format: int32
      property2: 
        type: string
      property3: 
        type: string  
  
  UpdateEntity:
     properties:
      # TODO!!!
      property1: 
        type: string
      property2: 
        type: string
      
        
  # Group 2
  WebsiteMetadata:
    properties:
      id:
        type: integer
        format: int32
      downloadPath:
        type: string
      url:
        type: string
      occurrences:
        type: array
        items:
          $ref: '#/definitions/Occurrence'
  
  WebsiteContent:
    properties:
      content:
        type: string
        
  UpdateWebsite:
    properties:
      url:
        type: string
      occurrences:
        type: array
        items:
          $ref: '#/definitions/Occurrence'
      content:
        type: string
        
  Occurrence:
    properties:
      entity:
        type: string
      role:
        type: string
      positions:
        type: array
        items:
          type: integer
          format: int32
          
  