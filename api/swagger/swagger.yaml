swagger: "2.0"
info:
  version: "0.0.1"
  title: MusicConnectsMachine API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  # auto generated hello world
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw


  # Group 2 mock up       
  /website:
    get:
      description: Returns metadata for all matching webpages
      operationId: website
      parameters:
        - name: terms
          in: query
          description: list of entities, e.g. ?terms=entity1+entity2+entity3
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add new webpage to DB
      operationId: addWebpage
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: body
          in: body
          description: website metadata and content
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateWebsite'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /website/{id}:
    get:
      description: Returns metadata for webpage with specified ID
      operationId: websiteID
      parameters:
        - name: id
          in: path
          description: ID of webpage
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update webpage
      operationId: updateWebpage
      parameters:
        - name: apiKey
          in: query
          description: API key
          required: true
          type: string
        - name: id
          in: path
          description: ID of webpage
          required: true
          type: integer
        - name: body
          in: body
          description: website metadata and content
          required: true
          schema:
            $ref: '#/definitions/UpdateWebsite'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/WebsiteMetadata'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /download/{filename}:
    get:
      description: Returns content (HTML tags stripped) of webpage with specified filename
      operationId: download
      parameters:
        - name: filename
          in: path
          description: filename of webpage
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/WebsiteContent'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
          
    
# complex objects have schema definitions
definitions:

  # auto generated hello world
  HelloWorldResponse:
      required:
        - message
      properties:
        message:
          type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
        
        
  # Group 2 mock up
  WebsiteMetadata:
    properties:
      id:
        type: integer
        format: int32
      downloadPath:
        type: string
      url:
        type: string
      occurrences:
        type: array
        items:
          $ref: '#/definitions/Occurrence'
  
  WebsiteContent:
    properties:
      content:
        type: string
        
  UpdateWebsite:
    properties:
      url:
        type: string
      occurrences:
        type: array
        items:
          $ref: '#/definitions/Occurrence'
      content:
        type: string
        
  Occurrence:
    properties:
      entity:
        type: string
      role:
        type: string
      positions:
        type: array
        items:
          type: integer
          format: int32
